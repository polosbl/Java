Object:

Я предлагаю использовать структуру геометрических фигур, но в целом эти упражнения можно выполнить на более-менее каком угодно классе.

1. В классе Circle переопределите метод toString(), чтобы он возвращал информацию об объекте, подобно методу printInformation (только вместо вывода на печать - return).
В методе printInformation тогда можно использовать toString, чтобы избежать дублирования кода.
В main создайте Circle и передайте его напрямую в System.out.println - проверьте, что информация корректно выводится.
2. В классе Circle переопределите метод equals(Object o) следующим образом:
	- если объект из параметра принадлежит другому классу - они не равны
	- если объект - тоже Circle, то они равны, если у них равны радиусы и совпадают центры
	- для сравнения центров можно использовать метод equals, который стоит переопределить также в классе Point.
3. Переопределите также метод hashCode в классах Point и Circle. Для создания хэша используйте метод Objects.hash(). В этот метод необходимо передать значения полей, использующихся при сравнении.
	- Point: используйте x и y
	- Circle: используйте radius и center



String:

1. Создать класс StringUtils. Все последующие задания выполняются в виде отдельных статических методов в этом классе. Можно использовать уже созданные методы в процессе для создания новых - done
2. int countCharacterEntries(String s, char c) - подсчитать кол-во вхождений символа c в строку s - done
3. boolean startsWithDigit(String s) - строка начинается с цифры - done
4. String findLongest(String... strings) - найти самую длинную строку. Если несколько строк имеют одинаковую длину - вывести любую. Или лучше их все, но необязательно. - done
5. smile(String s) - заменить все точки на смайлы, например " :) " - done
6. unsmile(String s) - удалить все смайлы из строки - done
7. int[] indexes20(String s) - найти все индексы вхождений числа 20 в строку - done
8. String[] sort(String... strings) - отсортировать в лексикографическом (алфавитном) порядке, учесть регистр - done
9. char findMostFrequentChar(String s) - найти самый часто встречающийся символ - done
10. char findFirstNonRepeating(String s) - найти первый символ, который встречается в строке один раз - done
11. divideAndPrint(String s, int n) - поделить строку на части по n символов и вывести их одна под одной

StringBuilder:

1. String reverse(String s) - перевернуть строку - done
2. boolean isPalindrome(String s) - строка является палиндромом - done
3. String wow(String s) - СдЕлАтЬ Со сТрОкОй вОт тАкОе - done
4. String repeat(String s, int times) - вернуть строку, в которой строка s повторяется times раз
5. String shuffle(String s) - перемешать символы в строке случайным образом
